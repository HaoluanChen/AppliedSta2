---
title: "Assignment2"
format: html
editor: visual
---

```{r}
library(readr)
library(tidyverse)
library(here)
library(rstan)
library(bayesplot) 
library(loo) 
library(tidybayes) 
```

# 1

## a)

From lecture 4: Assuming $\sigma$ is known, both likelihood and prior is normal, we have conjugate prior that our posterior also follows normal distribution:

$$p(\mu|y) \sim N(\mu_{posterior}, \sigma_{posterior}^2)$$ Where

$$\mu_{posterior} = N(\frac{\mu_0/\sigma_0^2+n*\bar{y}/\sigma^2}{1/\sigma_{\mu0}^2+n/\sigma^2}, \frac{1}{1/\sigma_{\mu0}^2+n/\sigma^2})$$

```{r}
mu0 = 100
sigma0 = 15
sigma = 15
mu = 113
n = 10

mu_posterior = (mu0/sigma0^2 + n*mu/sigma^2)/(1/sigma0^2+n/sigma^2)
mu_posterior
sigma_posterior = 1/(1/sigma0^2+n/sigma^2)
sigma_posterior
```

posterior mean is 111.82 and posterior variance is 20.45

```{r}
ci_lower <- qnorm(p = 0.025, mean = mu_posterior, sd = sqrt(sigma_posterior))
ci_upper <- qnorm(p = 0.975, mean = mu_posterior, sd = sqrt(sigma_posterior))
ci_lower
ci_upper
```

The 95% credible interval is \[102.95, 120.68\]

## b)

$$E[(\hat\mu-\mu^*)^2|\mu^*]= E[(\hat\mu-E(\hat\mu)+E(\hat\mu) -\mu^*)^2|\mu^*]$$

$$  = E[(\hat\mu-E(\hat\mu))^2 + 2(\hat\mu-E(\hat\mu))(E(\hat\mu)-\mu^*) + (E(\hat\mu) - \mu^*)^2|\mu^*]$$ $$ = E[(\hat\mu-E(\hat\mu))^2|\mu^*] + E[(E(\hat\mu)- \mu^*)|\mu^*]$$

## c)

Assuming $\mu^* =112$

For Bayesian: bias = 111.82 - 112 = 0.18 variance = 20.45 MSE = 20.45 + 0.18

For MLE:x\` Bias = 113 - 112 = 1 Variance = $\sigma^2/n = 22.5$ MSE = 1 + 22.5 = 23.5

MLE estimates has larger bias, variance, and MSE

## d)

```{r}
mle_mu <- 113 
mle_var <- 22.5
x <- seq(from = 90, to = 130, by = 0.1)
mle_data <- dnorm(x,mle_mu, sqrt(mle_var) )
bayes_data <- dnorm(x,mu_posterior, sqrt(sigma_posterior) )
data <- data.frame(x, mle_data, bayes_data)
data %>%
  pivot_longer(cols = c("mle_data","bayes_data"), names_to = "type", values_to = "density") %>%
ggplot(aes(x = x, y = density, fill = type)) +
geom_area(alpha = 0.8) +
labs(title = "Sampling densities by type")+
  geom_vline(xintercept = 112, color = "black")
```

```{r}
n = 50 
mle_mu <- 113 
mle_var <- 15^2/n
mu_posterior = (mu0/sigma0^2 + n*mu/sigma^2)/(1/sigma0^2+n/sigma^2)
sigma_posterior = 1/(1/sigma0^2+n/sigma^2)

```

```{r}
n = 100 
mle_mu <- 113 
mle_var <- 15^2/n
mu_posterior = (mu0/sigma0^2 + n*mu/sigma^2)/(1/sigma0^2+n/sigma^2)
sigma_posterior = 1/(1/sigma0^2+n/sigma^2)
```

```{r}
n <- seq(from = 10, to = 100, by = 1)
mle_mu <- 113 
mle_var <- 15^2/n
mu_posterior = (mu0/sigma0^2 + n*mu/sigma^2)/(1/sigma0^2+n/sigma^2)
sigma_posterior = 1/(1/sigma0^2+n/sigma^2)
d <- data.frame(n, mle_mu, mle_var,mu_posterior, sigma_posterior)
d %>% mutate(mle_bias = mle_mu - 112, bayes_bias = mu_posterior - 112, 
             mle_MSE = mle_bias+mle_var, bayes_MSE = bayes_bias+ sigma_posterior) %>% 
  ggplot(aes(x = n, y = bayes_MSE/mle_MSE)) + geom_point()
  
```

# 2

```{r}
sweden <- read_csv(here("data/sweden.csv"))
```

```{r}
sweden <- sweden %>% mutate(mortality = deaths/pop)
```

```{r}
sweden %>%
group_by(year) %>% summarise(avg_mort_rate = mean(mortality)) %>%
ggplot(aes(x = year,y = avg_mort_rate)) +
geom_line() +
geom_point() +
labs(title = 'average mortality rate over years')
```
We see that the average mortality rate is decreasing over time.

```{r}
sweden %>% filter(age>= 50 & age < 60) %>% 
  ggplot(aes(x = year, y = mortality, col = factor(age))) +   
           geom_point() +
            labs(title = 'average mortality rate over years for 50-59')

sweden %>% filter(age>= 60 & age < 70) %>% 
  ggplot(aes(x = year, y = mortality, col = factor(age))) +   
           geom_point()+
            labs(title = 'average mortality rate over years for 60-69')

sweden %>% filter(age>= 70 & age < 80) %>% 
  ggplot(aes(x = year, y = mortality, col = factor(age))) +   
           geom_point()+
            labs(title = 'average mortality rate over years for 70-79')

sweden %>% filter(age>= 80 & age < 90) %>% 
  ggplot(aes(x = year, y = mortality, col = factor(age))) +   
           geom_point()+
            labs(title = 'average mortality rate over years for 80-89')
sweden %>% filter(age >= 90) %>% 
  ggplot(aes(x = year, y = mortality, col = factor(age))) +   
           geom_point()+
            labs(title = 'average mortality rate over years for 90-100')
```

We see a overall decreasing trend for all the age group as we see for the average mortality rate. However, different age have different slope, for younger age the slope is steeper. Also notice that younger people have much lower mortality. For example in the age group 50-59, the mortality ranges from 0.002 to 0.008, where as for age group 90-100, the mortality rate ranges from 0.2 to 0.6.

## b)

After some trial and error, I found that both $\alpha$ and $\beta$ should be really small positive value. So let's put halfnormal(0, 0.01) on both. 

```{r}
sweden %>% mutate(age= age - mean(age)) 
set.seed(1)
sweden_2020 <- sweden %>% filter(year == 2020)
prior_sample_alpha <- abs(rnorm(1000, sd = 0.01))
prior_sample_beta <- abs(rnorm(1000, sd = 0.01))
predicted_y1 = rep(0,1000*51)
j = 1
for (i in 1:1000){
  for (index in 1:nrow(sweden_2020)){
    predicted_y1[j] = rpois(1, lambda = prior_sample_alpha[i]*
    exp(prior_sample_beta[i]*sweden_2020$age[index])*sweden_2020$pop[index])
  j = j + 1
}
}
```

```{r}
data.frame(predicted_y1) %>%
ggplot(aes(x = predicted_y1, y = ..density..)) +
geom_histogram(color = 'black', fill = 'lightblue') +
geom_vline(xintercept = 1700, color = "blue", lwd = 1.2, lty = 2) +
labs(title = 'prior predictive distribution', x = 'death') +
annotate("text", x = 6000, y =3e-4, label= "observed median",
color = "blue", size = 5)+ scale_x_continuous(limits = c(0, 20000))
```




## c)

Prior:

$$\alpha \sim HalfNormal(0, 0.01)$$ $$\beta \sim HalfNormal(0, 0.01)$$ Model:

$$D_x \sim Poisson(\mu_xP_x)$$ 

where $\mu_x = \alpha e^{\beta x}$ 

$x$ refer to age 

$P_x$ refer to population


```{r}

stan_data <- list(N = nrow(sweden_2020),
                  y = sweden_2020$deaths,
                  age = sweden_2020$age - mean(sweden_2020$age),
                  population = sweden_2020$pop)
mod <- stan(data = stan_data,
            file = here("Assignments/Assignment2/2c_model.stan"),
            iter = 5000,
            seed = 1)
```

```{r}
traceplot(mod, pars = c('alpha','beta'))
```

The traceplot shows that four chains are mixing very well. 

```{r}
summary(mod)$summary[c("alpha", "beta"),]
```
The effective sample is high and Rhat very close to 1. This also shows convergence. 

The posterior mean of alpha is really small 0.02662496, this is the mortality rate when the age equal to the mean age(75). The posterior mean of beta is 0.119, it means as age increase by one unit, the log mortality will increase by beta.


## d)
```{r}
y <- sweden_2020$deaths
yrep <- extract(mod)[["death_rep"]]
samp100 <- sample(nrow(yrep), 100)
ppc_dens_overlay(y, yrep[samp100, ]) + ggtitle("distribution of observed versus predicted death")
```

The density of the replicated is close to the observed density. 

```{r}
ppc_stat(y, yrep, stat = 'median') + ggtitle("distribution of replicated death")
14
```

The median is right at the center of our replicated death. This indicating our model performing well. 

## e) 

```{r results='hide'}
# talbe for estimate
alphas <- c()
betas <- c()
years <- seq(1990, 2020, by = 1)
for (i in 1:length(years)){
  year_data <- sweden %>% filter(year == years[i])
  stan_data <- list(N = nrow(year_data),
                    y = year_data$deaths,
                    age = year_data$age,
                    population = year_data$pop)
  mod_year_death <- stan(data = stan_data, 
                         file = here("Assignments/Assignment2/2c_model.stan"),
                         iter = 5000,seed = 1)
  alphas <- rbind(alphas,summary(mod_year_death)$summary[c("alpha"),])
  betas <- rbind(betas,summary(mod_year_death)$summary[c("beta"),])
}
```

```{r}
data.frame(alphas) %>%
  ggplot(aes(x = years)) +
  geom_line(aes(y = mean)) +
  geom_ribbon(aes(ymin = X2.5., ymax = X97.5.), alpha = 0.2) +
  labs(y = 'estimate', title = 'Estimated alpha over 1990 - 2020')
```
```{r}
data.frame(betas) %>%
  ggplot(aes(x = years)) +
  geom_line(aes(y = mean)) +
  geom_ribbon(aes(ymin = X2.5., ymax = X97.5.), alpha = 0.2) +
  labs(y = 'estimate', title = 'Estimated betas over 1990 - 2020')
```
Based on the plot, we see that alpha is decreasing over the years. In opposite, beta is increasing This indicates that the mortality rate is lower over the year, but as age increase, the changes to mortality is increasing. 


# 3

```{r}
q3data <- read_table("http://www.stat.columbia.edu/~gelman/arm/examples/arsenic/wells.dat", col_names = c("id", "switch", "arsenic", "dist", "assoc", "educ"), skip = 1)
q3data <- q3data %>% mutate(switch_str = if_else(switch == 0, "Didn't Switch", "Switched"))
q3data
```


## a)

```{r}
q3data %>% ggplot(aes(x = arsenic, y = dist , col = as.factor(switch_str))) + 
  geom_point()+
  theme_bw() +
  geom_smooth(method = "lm")
```




```{r}
q3data %>% ggplot(aes(arsenic))+geom_histogram(bins=50)+facet_grid(.~switch_str)+
  theme_bw() 
```

```{r}
q3data %>% ggplot(aes(dist))+geom_histogram(bins=50)+facet_grid(.~switch_str)+
  theme_bw() 
```

## b)

```{r}
d <- q3data$dist - mean(q3data$dist)
a <- q3data$arsenic - mean(q3data$arsenic)
da <- d*a

# named list to input for stan function
data <- list(N = length(d), 
             d = d,
             a = a,
             da = da,
             y = q3data$switch)

fit1 <- stan(file = here("Assignments/Assignment2/3b1_model.stan"),
            data = data, 
            iter = 2000,
            seed = 1)
```




```{r}
d <- q3data$dist - mean(q3data$dist)
log_a <- log(q3data$arsenic) - mean(log(q3data$arsenic))
da <- d*a

# named list to input for stan function
data <- list(N = length(d), 
             d = d,
             a = log_a,
             da = da, 
            y = q3data$switch)

fit2 <- stan(file = here("Assignments/Assignment2/3b2_model.stan"),
            data = data, 
            iter = 2000)
```


```{r}
summary(fit1)$summary[c("beta[1]", "beta[2]", "beta[3]", "beta[4]"),]
```

```{r}
summary(fit2)$summary[c("beta[1]", "beta[2]", "beta[3]", "beta[4]"),]
```

## c)


```{r}
q3c <- as.data.frame(sapply(q3data, function(x) gsub("\"", "", x)))
ty_id <- q3c %>% filter(arsenic < 0.82) %>% mutate(id = as.numeric(noquote(id)))%>% pull(id)
ty <- sum(q3data$arsenic < 0.82 & q3data$switch == 1)/sum(q3data$arsenic < 0.82)
ty
```


```{r}
yrep1 <- extract(fit1)[["y_rep"]] %>% t() %>% as_tibble()
yrep2 <- extract(fit2)[["y_rep"]] %>% t() %>% as_tibble()
```

```{r}
yrep1
```

```{r}
ty_1 <- yrep1 %>% slice(ty_id) %>% summarise_all(mean)%>% t() %>% as.data.frame()
ty_2 <- yrep2 %>% slice(ty_id) %>% summarise_all(mean)%>% t() %>% as.data.frame()
```


```{r}
data.frame(ty_1, ty_2) %>% rename(model1 = V1, model2 = V1.1) %>% 
  pivot_longer(cols = everything(), names_to = "model", values_to = "ty") %>% 
  ggplot(aes(x = ty)) +
  geom_histogram(bins = 30, fill = "lightblue") +
  geom_vline(xintercept = ty, color = "red") +
  facet_wrap(.~model)
```
```{r}
log_lik_1 <- extract_log_lik(fit1)
log_lik_2 <- extract_log_lik(fit2)
loo1 <- loo(log_lik_1, save_psis = TRUE)
loo2 <- loo(log_lik_2, save_psis = TRUE)
loo_compare(loo1, loo2)
```

